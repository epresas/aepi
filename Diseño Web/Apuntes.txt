Blog Germán: cosasdigitales.com

d3 data visualisation (investigar)
hover - tympanus.net (recursos, hovers)
allitebooks.com

SEO:
 Tráfico organico (investigar)


UX (Experiencia de usuario):
enlace de numero de telefono --> encerrar en un a con href tel:numero

Clase 1:
    Head: Sección de configuraciones, favicones, robots de indexacion, lo no visible por el usuario
    Body: Sección de contenidos visibles

    Etiquetas Head:
        - Title: Nombre y pequeña descripción
        - Meta: Identificación y función del site - No tiene cierre desde html 5 no se necesita la barra en las etiquetas de autocierre 
            * description - concisa, un par de frases a lo sumo
            * charset - codificación del documento
            * viewport
            * robots - determina como se van a comportar los robots con la pagina, pueden ser
                index - indexar en motores de búsqueda ejemplo de no follow: avisos legales de los sitios de empresas,  al poner no-index no se indexa en motores de busqueda
                follow - permitir u omitir los enlaces de la pagina
        - favicon: originalmente era una imagen de 16x16px que solo salia en la pestaña acompañando al titulo. Actualmente se utiliza en los favoritos de los moviles, por lo que se utilizan en tamaños mayores
                    se insertan con una etiqueta link rel="icon". Los favicones de apple tienen mayor tamaño y rel="apple-touch-icon"
        - link: rel
    Etiquetas Body:
        -De encabezado:
            * H1 - H6 --> Solo un H1 por pagina

        - De parrafo:
            strong: Contenido relevante
            em: voz alterna
            mark: resaltado
            hr: quiebre tematico/filete/ no tiene cierre    
            abbr: Abreviatura/atributo title crea un tooltip con lo que esté dentro           
        
            address: direcciones
            small: menor importancia en la pagina, se usa para copyright
            nav: conjuntos de enlaces de navegacion, no tiene que ser una sola por sitio, se debe componer de una ul con los enlaces (mas de 1)
            button: No enlaza a contenido, realiza una funcionalidad

    HTML5: (Orientado a las webs semánticas)

    EVITAR DIVS EN TODA LA FORMACION

    main: solo 1 por documento, etiqueta el contenido unico y original del documento
    header: encabezados o grupos de titulos
    section: Encajona secciones de contenidos
    article: subseccion de la section, necesita cumplir una regla particular: suficientemente grande para tener sentido por si mismo
    footer: puede haber tantas como unidades de contenido incluyan autoria, documentos adicionales, informacion legal
    aside: Contenido con poca relacion con el resto del contenido en el documento, por ejemplo la barra lateral de enlaces relacionados.
    figure: contenido grafico, imagenes, graficos, lo ornamental no es un figure, ya que no es contenido
    figcaption: descripcion del figure (pie de foto)
    blockquote: es una cita en bloque, que puede recibir o no tratamiento de estilo
    q: cita breve en linea, dentro de un parrafo por ejemplo
        las dos ultimas tienen un atributo CITE que permite colocar una url donde esta la fuente original de la cita, o el nombre y apellidos del autoria
    cite: utilizada como etiqueta en vez de atributo, contiene el autor/fuente de una cita de forma que lo vea el usuario.
    time: se encarga de identificar un punto cronologico (san valentin, navidad), si lo necesita debe incluir un atributo datatime="yyyy/mm/dd" (ayuda a que los robots de busqueda)

    span: asi como el div es una etiqueta de bloque sin significado semantico para agrupar contenidos, el span es una etiqueta utilizada
    para agrupar contenidos, pero en linea. Es util para luego aplicar estilos a ciertas secciones sin afectar el resto semanticamente

    Validacion de HTML: W3C WWW Consortium W3C validator - Necesario para entregar practicas
    Atributos globales: style - se pueden aplicar en todas las etiquetas
    HTML color codes - www.html-color-codes.info
    HTML entities: ampersand y otro caracteres que estan fuera de cualquier codificacion


    para enlaces a sitios multiidioma: crear directorio en root llamado en/ con una estructura similar pero en el idioma. Utilizar clases coherentes asi que un solo archivo de estilos

    ###########################################    CSS     ###################################################################

    Donde:
        - En linea (no no)
        - En head entre las etiquetas style
        - Hojas externas (y)

    Reglas:
        - Selector: Dice a quien aplicar Reglas
        - Declaracion: encerrada entre llaves
        - Propiedad: lo que se va a cambiar, la ultima no necesita ; pero es recomendable que todos tengan
        - Valor: va despues de la propiedad, separados entre :
        - Es recomendable que se definan desde lo mas general a lo mas especifico, por ejemplo: estilos que definan encabezados
        y luego especificar cosas particulares entre cada tipo de encabezado

    Selectores combinados:
        - Descendientes: colocar el selector separado por espacio de su padre
        - Descendientes directos: padre > hijo
        - Multiples: separamos selectores por comas. Tener cuidado con el significado semantico de los elementos para no romper la jerarquia
        por ejemplo: el font-size para h1 y h2, rompería el significado jerarquico del encabezado

    Selector global: *

    NOTA: Al empezar todo el estilado, es recomendable resetear los etilos basicos dados por el HTML de la siguiente manera:
    *{
        padding:0;
        margin:0;
    }
    

    Sobreescritura de reglas: cuando varias reglas aplican a un elemento, prevalece el ultimo declarado en la hoja de estilos, o bien prevalece el selector
    mas especifico, o en ultima instancia con la palabra !important (no recomendado)

    Reglas de nomenclaturas:
     - Las clases no deben tener caracteres especiales
     - Las clases no deben tener espacios
     - Las clases deberian ser descriptivos

    Propiedades:
    - Textos y fuentes:
        * colores: color: valor_color
          · Nominales: nombres predefinidos
          · Hexadecimal: # y 3 o 6 caracteres hexadecimales (cuando se repiten todos los caracteres se puede abreviar a 3 caracteres)
          · Equivalencia RGB: rgb(rojo,verde,azul)
          · RGBA: Igual que el RGB pero la A indica la opacidad (incluida como cuarto parametro)

        * letter-spacing: espacio entre letras, recibe pixeles (podria recibir otras pero no se recomienda)
            letter-spacing:2px;
        
        * text-transform: tiene un rango de posibilidades de valor, determina una transformacion al texto de mayusculas/minusculas. Puede ser:
            - uppercase
            - lowercase
            - capitalize
        
        * text-align: Alineacion horizontal del texto. Puede ser:
            - left
            - right
            - center
            - justify
        
        * font-weight: determina grosor de fuente (negrita). va de 100 a 900 en grupos de 100. El normal es de 400. No todas las familias de fuentes
        tienen todos los pesos. tambien se puede decir bold light  normal pero es mas recomendable de forma numerica

        * font-style: Determina el estilo de fuente. Puede ser:
            - italic
            - normal
        
        * font-size: Tamaño de fuente. Su unidad es el em (16px) el resto es referencia a ese estandar (1.2em). Antes se utilizaba el pixel pero es recomendable el em. 
        * line-height: Alto de linea (interlineado)
        * font-family: Determina la familia de tipografias. Tiene diferentes posibles valores. Por defecto tiene times new roman
            - sans-serif
            - helvetica
            - arial, y mas
        * text-decoration: Decoracion en el texto. Comunmente se usa subrayado o tachado. Se utiliza para quitar los subrayados de los enlaces hoy en dia con el valor Nominales
            - underline
            - line-through

        * list-style: decoracion de listas (bullets y numeros)
            - none
            - disc
            - square
            - y mas (ver en consola)

    - Fondos y espaciado:
        * background: da color al fondo.

    - display: controla la visibilidad de la caja. Tiene 3 valores:
        * block
        * inline: cuando un elemento esta en linea, tiene sus ejes verticales bloqueados, por eso no pueden llevar padding/margin-top/bottom
        * inline-block: permite poner los objetos en linea pero a su vez con las prestaciones del bloque (no tiene limitaciones verticales como el inline)

    Ocultar elementos: Se puede hacer de varias formas:
        - visibility : hidden - Sigue ocupando su espacio
        - opacity : 0 - da transparencia maxima por lo que no se ve, pero sigue ocupando su espacio
        - display : none - lo extrae del flujo (DOM)

    NOTA: Las secciones por lo general se separan con padding, mientras que el resto de elementos internos se separan con margin
    
    Modelo de caja: Sigue el flujo de html, donde se coloca todo en la esquina superior izquierda. Las cajas ocupan lo que ocupan sus contenidos. Hay que considerar:
        - Padding: espacio de separacion del contenido con su contenedor
        - Border: el borde visible de la caja: tienen direcciones (top, bottom, etc), y para cada uno tiene 3 propiedades:
            * width
            * style (solid, dashed etc)
            * color
            tambien se pueden abreviar de 2 formas diferentes: colocando en la misma linea separadas de espacio width style y color,
            no existe combinacion por coordenadas pero border solo es general el resto es por lado
        - Margin: el espacio entre la caja y los demas elementos del documento
        Coordenadas para padding y margin: individualmente se pueden dar, siguen el siguiente orden:
        padding/margin/border -> una sola cantidad: se aplica en todos lados
                                 2 cantidades: el primero es vertical (top-bottom) el segundo horizontal (left-right)
                                 4 cantidades: siguiendo las agujas del reloj desde arriba a la derecha (top, right, bottom, left)   

        NOTA SOBRE FIREBUG:
        el azul es contenido, el morado padding, el amarillo margin y el negro border 
        
    Cajas de tipo bloque: no permite que ningun elemento se coloque a su lado, va de lado a lado.
    Google fonts: Repositorio de fuentes, gratuita y referencia en diseño webs  
        categorias: filtra por:
            - Sin serifa: terminacion decorada, ideal para lectura
            - serifa: terminacion de palo seco, mas visual
            - display: cosas tipo cartel, las mas "sorprendentes", aptas para textos cortos 
            - handwriting: caligrafia a mano alzada
            - monospace: todos los caracteres ocupan el mismo espacio
        
        al buscar:
            - ver la pagina de resultados por categorias
            - en cualquiera escribir un texto que nos gustaria previsualizar
            - clicar apply to all fonts (ayuda a desencadenar respuestas emocionales)
            - Una vez elegida, se da al icono + (select this font), y se eligen las 2 funetes a Utilizar
            - en el apartado descargas, aperecen las opciones, usualmente se puede hacer por incrustado (embed) que da un link con la url de la fuente,
              y descarga directa, 
        
        al utilizar (embed):
            - en html, en head pegar el link 
            - en css, en font-family se pone entre comillas simples y si hay varias palabras en el nombre se ponen espacios, para el siguiente valor (fallback), se separa con coma y se pone una 
              tipografia nativa que si soporte el navegador por si falla el servidor donde esta alojada la fuente, se tiene un estilo similar al ideado de repuesto
            
        al utilizar (local):
            - convertir en los demas formatos (online converter), google fonts helper tiene las fuentes de google fonts con todos sus estilos y tipografias  y genera el bloque de css @font-face (parte superior del css)
            descargar las fuentes y pegarlas en el directorio fonts en la raiz (de personalizar la ubicacion tambien hay que hacerlo en el codigo de css en la parte src url)
            @font-face{
                font-family: 'nombre';
                font-style: normal;
                font-weight: 200;
                src:url()
            }
        estilos: cuando se elige una tipografia, la cantidad de estilos ayuda porque tiene las combinaciones de anchos e inclinaciones (bold, italic, regular)

        modificacion de tamaños: A traves de:
            - width, height: aceptan medidas relativas y absolutas
        
        flotaciones: permiten cambiar el eje de direccion de los elementos  
            - El valor por defecto de float es none (para seguir el flujo)
            - un elemento en linea se centra con text-align pero un elemento en bloque no, para ello su padding lateral seria auto,
              un elemento en inline-block no se puede centrar.
        NOTA: Al final de los elementos flotantes, se recomienda un div .clearfix cuya regla css tenga un clear:both;
            todos los elementos flotados estan fuera del flujo de HTML por lo que es propenso a comportamientos irracionales cuando tiene elementos flotados, de esta 
            manera, el contenedor que contiene dichos elementos los ve

        Al columnar:
        para dar ancho y considerar los margin/padding de los elementos hay que considerar ese exceso, se hace asi:
        calc(porcentaje_ancho_columna - exceso_pixeles_aire);
    
        Para hacer un menu:
        display entre li
        aire a los enlaces dentro de los li (haciendolos tipo inline block para que aplique verticalmente)
        flotar segun se desee (el ul para no romper el flujo)

        TRANSICIONES
        transition: property duration timing-function delay (se puede hacer individualmente separando con guion cada palabra)
            - property es que propiedades son transicionadas (se pueden incluir varias con espacio o all para todas), al separar con comas se pueden personalizar los tiempos de duracion y delay de cada propiedad
            - duration es el tiempo que tarda en hacer la transicion (acompañando de s - segundos)
            - timing-function determina la forma que se aplicara la aceleracion de la transicion. Por defecto es ease-in. Tambien pueden aplicarse funciones propias (google cubic bezier - generador de curvas de bezier para funciones de aceleracion) y se aplica en donde iria el timing function
            - delay es opcional e indica en segundos el tiempo que tarda en aplicarse la transicion y para quitar el efecto que aplica, por defecto es 0.

        FONDOS: Permite insertar una imagen ornamental. No puede tener contenido. Por defecto se repite en el eje x e y para crear un patron y cubrir areas mayores al tamaño de la imagen
        shortcut: background: color image-url('ruta') repeat position / size attachment --> la barra se coloca ya que size y position pueden recibir valores absolutos multiples y de esa manera se dividen a quien corresponde
            - color:
            - image:
            - repeat: por defecto se repite en ambos ejes (repeat), pero puede no repetirse (no-repeat) o en ejes individuales (repeat-x o repeat-y)
            - position: puede recibir 1 o 2 posiciones :
                * center: se coloca equidistantemente en x y y
                * top/bottom 
                * valores absolutos (pixeles, porcentajes)
            - size: acepta valores:
                * cover: determina que la imagen tomara el tamaño minimo necesario para cubrir el area de la caja
                * contain: se asegura que la imagen se muestra en su totalidad con independencia del area // poco utilizado ya que puede dejar areas vacias
                * medidas absolutas:
            - attachment: permite  darle valores 
                * fixed: la imagen se queda fina y el contenido puede moverse con el scroll
                * parallax: da sensacion de acompañamiento del contenido (ver documentacion)
            NOta: al cargar imagen de fondo colocar un color de fallback que ayude en caso de que la imagen no se cargue

    ICONOS VECGTORIALES (SVG): (Articulo german) flaticon (web)

    Flaticon: se colocan como clases en elementos i (el italico para html5 esta en desuso porque semanticamente no se da tratamiento estetico a un contenido)
    por defecto tienen tamaño de 1em = 16px, si es iconfont se trata como una fuente para el color. Pero para que coja el tamaño como una fuente se utiliza el ::before

    linea.io - iconos SVG

    svg --- sprite svg, se  descarga, es un codigo xml grande.. se pega en un sitio en el html y se referencia donde se quiera meter el svg con la clase que dice el svg (flaticon)
    otra forma es quitar el style, pegar el viewbox en el tag svg y quitar la etiqueta symbol.

    valores inherit e initial
    inherit: fuerza la herencia de la propiedad del padre
    initial: fuerza el comportamiento default del elemento.

    - text-shadow: recibe 2 valores separados por espacio, 2 medidas que es la distancia de la sombra en los ejes x y y, se puede recibir un tercero que es el color
    y opcionalmente un tercer valor que es el desenfoque y van en pixeles todas.
    - box-shadow: igual que el text shadow pero a nivel de caja.
    - font shadow: (grabient.com--> referencia) 
    para degradados modal --  revisar pagina y en la propiedad background-image: linear-gradient(configuracion--> gradosdeg, color 1 porcentaje, color 2 porcentaje)

    Velado de imagenes: con pseudo elementos
    se coloca un pseudoelemento before donde en su estilo tenga un color y una opacidad, el content tiene que estar vacio altura y ancho 100% . se puede hacer degradado... ver documentacion


    Microdata: 
    schema.org --> referencia 
    
    #################   RESPONSIVE   #############################
    meta etiqueta viewport es la que indica el responsive 
        *width="device-width
        *

    al final del css se abre un media query
    @media screen and (max-width:800px){
        reglas css para esta dimension
        
    }
    dentro van las reglas que no se repitan de tal forma que se logre el objetivo


    